{
  "openapi": "3.0.0",
  "info": {
    "title": "A sample API conforming to the OGC Web Feature Service standard",
    "version": "0.0.1",
    "description": "WARNING - THIS IS WORK IN PROGRESS\\\nTODO - Add a description of the sample service.\\\nTODO - Add security elements in a separate example.\\\nTODO - Connect to a live service.",
    "contact": {
      "name": "Acme Corporation",
      "email": "info@example.org",
      "url": "http://example.org/"
    },
    "license": {
      "name": "CC-BY 4.0 license",
      "url": "https://creativecommons.org/licenses/by/4.0/"
    }
  },
  "servers": [
    {
      "url": "https://dev.example.org/",
      "description": "Development server"
    },
    {
      "url": "https://data.example.org/",
      "description": "Production server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "describe the feature collections in the dataset",
        "operationId": "describeCollections",
        "tags": [
          "Capabilities"
        ],
        "responses": {
          "200": {
            "description": "The feature collections shared by this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/content"
                }
              },
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "An error occured.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exception"
                }
              },
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/conformance": {
      "get": {
        "summary": "list all requirements classes specified in a standard (e.g., WFS 3.0) that the server conforms to",
        "operationId": "getRequirementsClasses",
        "tags": [
          "Capabilities"
        ],
        "responses": {
          "200": {
            "description": "the URIs of all requirements classes supported by the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/req-classes"
                }
              }
            }
          },
          "default": {
            "description": "An error occured.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/buildings": {
      "get": {
        "summary": "retrieve building features; use conneg to request HTML or GeoJSON",
        "description": "Every feature in a dataset belongs to one collection of features. A dataset may consist of multiple feature collections. Typically, a feature collection is a collection of features of a similar type, based on a common schema.\nThis sample WFS has a single feature collection for buildings.",
        "operationId": "getBuildings",
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "$ref": "#/components/parameters/bbox"
          },
          {
            "$ref": "#/components/parameters/function"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about the feature collection plus the first features matching the selection parameters.",
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollectionGeoJSON"
                }
              },
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "An error occured.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exception"
                }
              },
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/buildings.json": {
      "get": {
        "summary": "retrieve building features in GeoJSON",
        "description": "Every feature in a dataset belongs to one collection of features. A dataset may consist of multiple feature collections. Typically, a feature collection is a collection of features of a similar type, based on a common schema.\nThis sample WFS has a single feature collection for buildings.",
        "operationId": "getBuildingsJSON",
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "$ref": "#/components/parameters/bbox"
          },
          {
            "$ref": "#/components/parameters/function"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about the feature collection plus the first features matching the selection parameters.",
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollectionGeoJSON"
                }
              }
            }
          },
          "default": {
            "description": "An error occured.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/buildings/{fid}": {
      "get": {
        "summary": "retrieve a building; use conneg to request HTML or GeoJSON",
        "operationId": "getBuilding",
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "A feature.",
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/buildingGeoJSON"
                }
              },
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "An error occured.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exception"
                }
              },
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/buildings/{fid}.json": {
      "get": {
        "summary": "retrieve a building in GeoJSON",
        "operationId": "getBuildingJSON",
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "A feature.",
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/buildingGeoJSON"
                }
              }
            }
          },
          "default": {
            "description": "An error occured.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "count": {
        "name": "count",
        "in": "query",
        "description": "The optional count parameter limits the number of items that are presented in the response document.\\\nOnly items are counted that are on the first level of the collection in the response document. Nested objects contained within the explicitly requested items shall not be counted.\\\nMinimum = 1.\\\nMaximum = 10000.\\\nDefault = 10.",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10000,
          "default": 10
        },
        "style": "form",
        "explode": false
      },
      "bbox": {
        "name": "bbox",
        "in": "query",
        "description": "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four numbers:\n* Lower left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Upper right corner, coordinate axis 1 * Upper right corner, coordinate axis 2\nFor WGS84 longitude/latitude this is in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).",
        "required": false,
        "schema": {
          "type": "array",
          "minItems": 4,
          "maxItems": 4,
          "items": {
            "type": "number",
            "minimum": -180,
            "maximum": 180
          }
        },
        "style": "form",
        "explode": false
      },
      "function": {
        "name": "function",
        "in": "query",
        "description": "Only return buildings of a particular function.\\\nDefault = return all buildings.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "residential",
            "commercial",
            "public use"
          ]
        },
        "style": "form",
        "explode": false,
        "example": "function=public+use"
      },
      "id": {
        "name": "id",
        "in": "path",
        "description": "The id of a feature",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "exception": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "req-classes": {
        "type": "object",
        "required": [
          "conformsTo"
        ],
        "properties": {
          "conformsTo": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "http://www.opengis.net/spec/wfs-1/3.0/req/core",
              "http://www.opengis.net/spec/wfs-1/3.0/req/oas30",
              "http://www.opengis.net/spec/wfs-1/3.0/req/html",
              "http://www.opengis.net/spec/wfs-1/3.0/req/geojson"
            ]
          }
        }
      },
      "bbox": {
        "type": "object",
        "required": [
          "bbox"
        ],
        "properties": {
          "crs": {
            "type": "string",
            "enum": [
              "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
            ],
            "default": "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
          },
          "bbox": {
            "description": "west, north, east, south edges of the bounding box",
            "type": "array",
            "minItems": 4,
            "maxItems": 4,
            "items": {
              "type": "number",
              "minimum": -180,
              "maximum": 180
            },
            "example": [
              -180,
              -90,
              180,
              90
            ]
          }
        }
      },
      "content": {
        "type": "object",
        "required": [
          "collections"
        ],
        "properties": {
          "collections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/collectionInfo"
            }
          }
        }
      },
      "collectionInfo": {
        "type": "object",
        "required": [
          "name",
          "links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "address"
          },
          "title": {
            "type": "string",
            "example": "address"
          },
          "description": {
            "type": "string",
            "example": "An address."
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "example": [
              {
                "href": "http://data.example.com/buildings",
                "rel": "item"
              },
              {
                "href": "http://example.com/concepts/buildings.html",
                "rel": "describedBy",
                "type": "text/html"
              }
            ]
          },
          "extent": {
            "$ref": "#/components/schemas/bbox"
          },
          "crs": {
            "description": "TODO - add description ... first crs is the default crs",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
            ],
            "example": [
              "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
              "http://www.opengis.net/def/crs/EPSG/0/4326"
            ]
          }
        }
      },
      "link": {
        "type": "object",
        "required": [
          "href"
        ],
        "properties": {
          "href": {
            "type": "string",
            "example": "http://data.example.com/buildings/123"
          },
          "rel": {
            "type": "string",
            "example": "alternate"
          },
          "type": {
            "type": "string",
            "example": "application/geo+json"
          },
          "hreflang": {
            "type": "string",
            "example": "en"
          }
        }
      },
      "featureCollectionGeoJSON": {
        "type": "object",
        "required": [
          "features"
        ],
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/featureGeoJSON"
            }
          }
        }
      },
      "featureGeoJSON": {
        "type": "object",
        "required": [
          "type",
          "geometry",
          "properties"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Feature"
            ]
          },
          "geometry": {
            "$ref": "#/components/schemas/geometryGeoJSON"
          },
          "properties": {
            "type": "object",
            "nullable": true
          },
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "geometryGeoJSON": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Point",
              "MultiPoint",
              "LineString",
              "MultiLineString",
              "Polygon",
              "MultiPolygon",
              "GeometryCollection"
            ]
          }
        }
      },
      "buildingGeoJSON": {
        "type": "object",
        "required": [
          "type",
          "geometry",
          "properties"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Feature"
            ]
          },
          "geometry": {
            "$ref": "#/components/schemas/geometryGeoJSON"
          },
          "properties": {
            "type": "object",
            "nullable": true,
            "properties": {
              "name": {
                "type": "string"
              },
              "function": {
                "type": "string",
                "enum": [
                  "residential",
                  "commercial",
                  "public use"
                ]
              },
              "floors": {
                "type": "integer",
                "minimum": 1
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Capabilities",
      "description": "Essential characteristics of this API including information about the data."
    },
    {
      "name": "Features",
      "description": "Access to data (features)."
    }
  ]
}